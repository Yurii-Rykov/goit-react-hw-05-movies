{"version":3,"file":"static/js/166.ad08c612.chunk.js","mappings":"mMA+DA,UA3De,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KA0BA,OARAC,EAAAA,EAAAA,YAAU,WACK,KAATF,GAIJG,EAAAA,EAAAA,MAAUH,GAAMI,MAAK,SAAAC,GAAG,OAAIR,EAAUQ,EAAIC,KAAKC,QAAvB,GACzB,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAtBU,SAAAC,GAClBA,EAAMC,iBAEgB,KAAlBZ,EAAOa,QAKXV,EAAQH,GACRC,EAAU,KAJRa,MAAM,KAKT,EAYG,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOlB,EACPmB,SAhCW,SAAAR,GACjBV,EAAUU,EAAMS,cAAcF,MAAMG,cACrC,KAgCK,mBAAQN,KAAK,SAAb,uBAGDjB,EAAOwB,SACN,wBACGxB,EAAOyB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAkBC,GAAE,kBAAaD,EAAGE,IAApC,SACGF,EAAGG,OADKH,EAAGE,KADPF,EAAGE,GAMf,QAKV,C,wFC7DKE,EAAQC,EAAAA,MAAAA,QAEDxB,EAAM,CACjByB,SAAS,WAAD,wBAAE,6GAEiBF,EAAM,CAC3BG,OAAQ,MACRC,IAAI,2FAJA,cAEAC,EAFA,yBAMCA,GAND,gCAQNC,QAAQC,IAAR,MARM,yDAAF,kDAAC,GAYTC,MAAM,WAAD,wBAAE,WAA2BlC,GAA3B,gGAEoB0B,EAAM,CAC3BG,OAAQ,MACRC,IAAI,kHAAD,OAAoH9B,EAApH,0BAJF,cAEG+B,EAFH,yBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,yDAAF,mDAAC,GAYNE,SAAS,WAAD,wBAAE,WAAwBC,GAAxB,gGAEiBV,EAAM,CAC3BG,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,qEAJC,cAEAL,EAFA,yBAMCA,GAND,gCAQNC,QAAQC,IAAR,MARM,yDAAF,mDAAC,GAYTI,KAAK,WAAD,wBAAE,WAAuBD,GAAvB,gGAEqBV,EAAM,CAC3BG,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,sEAJH,cAEIL,EAFJ,yBAMKA,GANL,gCAQFC,QAAQC,IAAR,MARE,yDAAF,mDAAC,GAYLK,QAAQ,WAAD,wBAAE,WAA0BF,GAA1B,gGAEkBV,EAAM,CAC3BG,OAAQ,MACRC,IAAI,sCAAD,OAAwCM,EAAxC,6EAJA,cAECL,EAFD,yBAMEA,GANF,gCAQLC,QAAQC,IAAR,MARK,yDAAF,mDAAC,G","sources":["components/Movies/Movies.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { API } from '../../services/api.js';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [word, setWord] = useState('');\n\n  const nameSearch = event => {\n    setSearch(event.currentTarget.value.toLowerCase());\n  };\n\n  const submitSerch = event => {\n    event.preventDefault();\n\n    if (search.trim() === '') {\n      //  toast.info('Enter images!')\n      alert('no');\n      return;\n    }\n    setWord(search);\n    setSearch('');\n  };\n\n  useEffect(() => {\n    if (word === '') {\n      return;\n    }\n\n    API.movie(word).then(res => setMovies(res.data.results));\n  }, [word]);\n\n  return (\n    <div>\n      <form onSubmit={submitSerch}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={search}\n          onChange={nameSearch}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies.length && (\n        <ul>\n          {movies.map(el => {\n            return (\n              <li key={el.id}>\n                <Link key={el.id} to={`/movies/${el.id}`}>\n                  {el.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","const axios = require('axios').default;\n\nexport const API = {\n  trending: async function apiTrending() {\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https:api.themoviedb.org/3/trending/movie/day?api_key=7e27a31a64f35e2d3f45ab72b99097a8`,\n      });\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  movie: async function searchMovie(word) {\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/search/movie?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US&page=1&query=${word}&include_adult=false`,\n      });\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  infoCart: async function infoCart(movieId) {\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US&page=1`,\n      });\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  cast: async function castApi(movieId) {\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US`,\n      });\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  reviews: async function reviewsApi(movieId) {\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US&page=1`,\n      });\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n"],"names":["useState","movies","setMovies","search","setSearch","word","setWord","useEffect","API","then","res","data","results","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","value","onChange","currentTarget","toLowerCase","length","map","el","to","id","title","axios","require","trending","method","url","response","console","log","movie","infoCart","movieId","cast","reviews"],"sourceRoot":""}