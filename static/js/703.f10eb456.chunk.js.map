{"version":3,"file":"static/js/703.f10eb456.chunk.js","mappings":"8NACA,GAAiB,E,SCqEjB,EAjEe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA+BA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAaI,IAAI,UAAY,GACxCD,IAAUN,GACXC,EAAQK,GAEG,KAATN,GAGJQ,EAAAA,EAAAA,MAAUR,GAAMS,MAAK,SAAAC,GAAG,OAAIb,EAAUa,EAAIC,KAAKC,QAAvB,GACzB,GAAE,CAACZ,EAAMG,KAGR,iBAAKU,UAAWC,EAAAA,QAAhB,WACE,kBAAMC,SA3BU,SAAAC,GAClBA,EAAMC,iBAEgB,KAAlBnB,EAAOoB,QAMXd,EAAgB,CAACE,MAAOR,IACxBG,EAAQH,GACRC,EAAU,KANRoB,MAAM,KAOT,EAeG,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOzB,EACP0B,SArCW,SAAAR,GACjBjB,EAAUiB,EAAMS,cAAcF,MAAMG,cACrC,KAqCK,mBAAQN,KAAK,SAAb,uBAGDxB,EAAO+B,OAAS,IACf,wBACG/B,EAAOgC,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAkBC,GAAE,kBAAaD,EAAGE,IAApC,SACGF,EAAGG,OADKH,EAAGE,KADPF,EAAGE,GAMf,QAKV,C,wFCpEKE,EAAQC,EAAAA,MAAAA,QAED1B,EAAM,CACjB2B,SAAS,WAAD,wBAAE,6GAEiBF,EAAM1B,IAAN,4FAFjB,cAEA6B,EAFA,yBAKCA,GALD,gCAONC,QAAQC,IAAR,MAPM,yDAAF,kDAAC,GAWTC,MAAM,WAAD,wBAAE,WAAMvC,GAAN,gGAEoBiC,EAAM1B,IAAN,yHAC6FP,EAD7F,yBAFpB,cAEGoC,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,yDAAF,mDAAC,GAWNE,SAAS,WAAD,wBAAE,WAAMC,GAAN,gGAEiBR,EAAM1B,IAAN,6CACiBkC,EADjB,oEAFjB,cAEAL,EAFA,yBAKCA,GALD,gCAONC,QAAQC,IAAR,MAPM,yDAAF,mDAAC,GAWTI,KAAK,WAAD,wBAAE,WAAMD,GAAN,gGAEqBR,EAAM1B,IAAN,6CACiBkC,EADjB,qEAFrB,cAEIL,EAFJ,yBAKKA,GALL,gCAOFC,QAAQC,IAAR,MAPE,yDAAF,mDAAC,GAWLK,QAAQ,WAAD,wBAAE,WAAMF,GAAN,gGAEkBR,EAAM1B,IAAN,6CACiBkC,EADjB,4EAFlB,cAECL,EAFD,yBAKEA,GALF,gCAOLC,QAAQC,IAAR,MAPK,yDAAF,mDAAC,G","sources":["components/Movies/Movies.module.css","components/Movies/Movies.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { API } from '../../services/api.js';\nimport s from './Movies.module.css'\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [word, setWord] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const nameSearch = event => {\n    setSearch(event.currentTarget.value.toLowerCase());\n  };\n\n  const submitSerch = event => {\n    event.preventDefault();\n\n    if (search.trim() === '') {\n      //  toast.info('Enter images!')\n      alert('no');\n      return;\n    }\n\n    setSearchParams({query: search});\n    setWord(search);\n    setSearch('');\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query') || '';\n    if(query !== word){\n      setWord(query) \n    } \n    if (word === '') {\n      return;\n    }\n    API.movie(word).then(res => setMovies(res.data.results));\n  }, [word, searchParams]);\n\n  return (\n    <div className={s.wrapper}>\n      <form onSubmit={submitSerch}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={search}\n          onChange={nameSearch}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(el => {\n            return (\n              <li key={el.id}>\n                <Link key={el.id} to={`/movies/${el.id}`}>\n                  {el.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","const axios = require('axios').default;\n\nexport const API = {\n  trending: async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=7e27a31a64f35e2d3f45ab72b99097a8`\n      );\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  movie: async word => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US&page=1&query=${word}&include_adult=false`\n      );\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  infoCart: async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US&page=1`\n      );\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  cast: async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US`\n      );\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  reviews: async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e27a31a64f35e2d3f45ab72b99097a8&language=en-US&page=1`\n      );\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n"],"names":["useState","movies","setMovies","search","setSearch","word","setWord","useSearchParams","searchParams","setSearchParams","useEffect","query","get","API","then","res","data","results","className","s","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","value","onChange","currentTarget","toLowerCase","length","map","el","to","id","title","axios","require","trending","response","console","log","movie","infoCart","movieId","cast","reviews"],"sourceRoot":""}